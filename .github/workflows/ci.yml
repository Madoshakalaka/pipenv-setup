name: ci

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  ci:
    name: test-${{ matrix.os }}-python${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:

        # this works like a loop; think `pytest.mark.parametrize`
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: checkout build
      id: checkout-build
      uses: actions/checkout@v2

    # with this we do not need to worry about the various ways in which
    # each os installs python
    - name: setup python
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: upgrade pip
      id: upgrade-pip
      run: |
        python -m pip install --upgrade pip

    # gets the path to wherever each os stores pip's cache
    - name: get pip cache dir
      id: get-pip-cache-dir
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: cache pip
      uses: actions/cache@v2
      id: cache-pip
      with:

        # set above with `get pip cache dir`
        path: ${{ steps.get-pip-cache-dir.outputs.dir }}

        # determines whether the hash of setup.py has changed
        # CACHE_VERSION: slight hack, see https://stackoverflow.com/a/64819132
        key: ${{ runner.os }}-pip-${{ secrets.CACHE_VERSION }}-${{ hashFiles('**/setup.py') }}

    - name: install packages
      id: install-packages
      run: |
        python -m pip install .[dev] codecov

    - name: test
      id: test

      # python -m codecov only to run if exit status is 0
      run: |
        python -m pytest --cov=pipenv_setup --cov-report=xml && python -m codecov
